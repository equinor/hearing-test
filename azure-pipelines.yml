trigger:
- master
- develop

pool:
  vmImage: 'macos-latest'

variables:
- group: AppiOS
- name: SDK
  value: 'iphoneos'
- name: signingIdentity
  value:  'iPhone Distribution: Statoil ASA'

steps:

- task: Bash@3
  displayName: 'Set env config'
  inputs:
    arguments: 'Prod'
    targetType: 'inline'
    script: |
      ANSWER=$1
      # (2) handle the command line argument we were given
      while true
      do
        case $ANSWER in
         [dD]* )
           echo "Changing to Dev-environment..."
           cp app/env-configs/dev.json app/settings.json
           echo "Changed to Dev-environment"
           break;;
         [tT]* )
           echo "Changing to Test-environment..."
           cp app/env-configs/test.json app/settings.json
           echo "Changed to Test-environment"
           break;;
         [pP]* )
           echo "Changing to Prod-environment..."
           cp app/env-configs/prod.json app/settings.json
           echo "Changed to Prod-environment"
           break;;
         * )     echo "Please specify which environment you want. [Test, Dev, Prod]"; break ;;
        esac
      done

- task: UseNode@1
  displayName: 'Specifying Node version'

- bash: 'npm i'
  displayName: 'Installing JS dependencies with NPM'

- task: InstallAppleCertificate@2
  displayName: 'Install Apple certificate - dd.mm.2021'
  inputs:
    certSecureFile: 'statoil_desi.p12'
    certPwd: '$(p12Password)'

# - task: InstallAppleProvisioningProfile@1
#   displayName: 'Install Apple provisioning profile - 02.09.20 - Test'
#   inputs:
#     provProfileSecureFile: 'Ergonomics_Test.mobileprovision'

- task: Xcode@5
  displayName: 'Building the project with Xcode'
  inputs:
    configuration: 'Release'
    actions: 'build'
    xcWorkspacePath: 'ios/madapp.xcworkspace'
    scheme: 'madapp'
    xcodeVersion: '10'
    packageApp: true
    exportPath: '$(agent.builddirectory)/output/$(SDK)/$(BuildConfiguration)'
    signingOption: 'manual'
    signingIdentity: '$(SigningIdentity)'
    # provisioningProfileUuid: '$(PROVISIONING_PROFILE_UUID)'
    useXcpretty: true

- task: CopyFiles@2
  displayName: 'Copying our built files to: $(build.artifactstagingdirectory)/$(BuildConfiguration)'
  inputs:
    SourceFolder: '$(agent.builddirectory)/output/$(SDK)/$(BuildConfiguration)'
    Contents: '**/*.ipa'
    TargetFolder: '$(build.artifactstagingdirectory)/$(BuildConfiguration)'

- task: PublishBuildArtifacts@1
  displayName: 'Publishing the Artifact: drop'
