name: Build and Release OM Inspection
on: 
  workflow_call:
    inputs:
      environment:
        description: 'The app environment to build'
        default: 'test'
        required: true
        type: string
    
env:
  CODE_SIGN_IDENTITY: "Apple Distribution: Equinor ASA"

jobs:
    build:
        name: Build IPA
        environment:
          name: ${{inputs.environment}}
         
        runs-on: macos-13
        steps:

           - name: Set build number to environment variable
             run: echo "BUILD_NUMBER=$(date +'%Y').$(date +'%m%d').${{github.run_number}}" >> $GITHUB_ENV
               
           - name: Checkout repository
             uses: actions/checkout@v4

           - name: Install the Apple certificate and provisioning profile
             env:
               BUILD_CERTIFICATE_BASE64: ${{ secrets.P12SECRET }}
               P12_PASSWORD: ${{ secrets.P12PASSWORD }}
               BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
               KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
             run: |
               CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
               PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
               KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

               # import certificate and provisioning profile from secrets
               echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
               echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

               # create temporary keychain
               security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
               security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
               security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

               # import certificate to keychain
               security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
               security list-keychain -d user -s $KEYCHAIN_PATH

               # apply provisioning profile
               mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
               cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles 


           - name: Getting UUID from Installed Provisioning Profile
             run: | 
               Get-ChildItem -path "/Users/runner/Library/MobileDevice/Provisioning Profiles"
               $Profile = "/Users/runner/Library/MobileDevice/Provisioning Profiles/build_pp.mobileprovision"
               $mobileProvisionContent = Get-Content -Path $Profile -Raw
               $uuid = [regex]::Match($mobileProvisionContent, "<key>UUID<\/key>\s*<string>(.*?)<\/string>").Groups[1].Value

               # Output the UUID
               Write-Host "UUID: $uuid"
               "UUID=$uuid" >> $env:GITHUB_ENV
             shell: pwsh

           - name: Generate ExportOptions.plist from Provisioning Profile
             run: |
               FILE=ExportOptions.plist
               /usr/libexec/PlistBuddy -c "add :compileBitcode bool true" $FILE
               /usr/libexec/PlistBuddy -c "add :method string app-store" $FILE
               /usr/libexec/PlistBuddy -c "add :provisioningProfiles dict" $FILE
               /usr/libexec/PlistBuddy -c "add :provisioningProfiles:${{vars.BUNDLE_IDENTIFIER}} string ${{env.UUID}}" $FILE
               /usr/libexec/PlistBuddy -c "add :signingStyle string manual" $FILE
               /usr/libexec/PlistBuddy -c "add :teamId string 2F7Q634FSX" $FILE
               cat $FILE

           - name: Use Node 18.x
             uses: actions/setup-node@v4
             with:
                cache: 'npm'
                node-version: 18.x
                
           - name: Install expo-cli
             run: npm install -g expo-cli && expo --version

           - name: Install dependencies with npm ci
             run: npm ci

           - name: Set package.json as environment variables
             uses: antifree/json-to-variables@v1.0.1
             with: 
               filename: 'package.json'
               prefix: 'PACKAGEJSON'

           - name: Replace settings.json with environment settings
             run: |
               env=`echo "${{inputs.environment}}"| tr "[:upper:]" "[:lower:]"`
               mv constants/env-configs/$env.json settings.json

           - name: Set settings.json as environment variables
             uses: antifree/json-to-variables@v1.0.1
             with: 
               filename: 'settings.json'
               prefix: 'SETTINGS'

           - name: Patch app.json
             uses: onlyutkarsh/patch-files-action@v1.0.1
             with: 
               fail-if-no-files-patched: true
               fail-if-error: true
               files: ./app.json
               patch-syntax: |
                 = /expo/ios/bundleIdentifier => "${{ vars.BUNDLE_IDENTIFIER }}"
                 = /expo/ios/buildNumber => "${{ env.BUILD_NUMBER }}"
                

